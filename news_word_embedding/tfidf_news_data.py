# -*- coding: utf-8 -*-
"""tfidf_news_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-JAmatsssl4p88aWd_k445pN9LnB21VY
"""

import pandas as pd
from tqdm import tqdm

from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer

news_titles_kma = []
news_titles_raw = []

with open('dataFile/KCC_news_mecab.txt', 'r', encoding = "UTF-8") as f:
    for sent in f:
        # if sent == "":
        #     continue
        news_titles_kma.append(sent)
    text = f.readlines()
    f.close()
with open('dataFile/KCC150_Korean_sentences_utf_8.txt', 'r', encoding = "UTF-8") as f:
    for sent in f:
        # if sent == "":
        #     continue
        news_titles_raw.append(sent)
    text = f.readlines()
    f.close()

print(len(news_titles_raw),len(news_titles_kma))
# TfidfVectorizer fit
tfidfv = TfidfVectorizer()
titles_transformed = tfidfv.fit_transform(news_titles_kma)

# N번째 뉴스에 대해 tfidf 값을 구함
# titles = news_titles_kma
# title_transformed = tfidfv.transform(titles).toarray()
# print(titles_transformed[0].toarray())
# print(tfidfv.get_feature_names_out())
# print(dict(zip(tfidfv.get_feature_names_out(), titles_transformed.toarray().sum(axis=0))))


# 모든 title에 대해 keyword 추출 --> 시간 개많이 걸림...
keyword_df = pd.DataFrame(columns=['title', 'keywords'])
features = tfidfv.get_feature_names_out()

for i in tqdm(range(4400,4440)):
    title = [news_titles_kma[i]]
    title_transformed = titles_transformed[i].toarray()
    
    tfidf_dict = dict(zip(features, title_transformed.sum(axis=0)))
    tfidf_dict = {x: y for x, y in tfidf_dict.items() if y != 0}
    tfidf_dict = dict(sorted(tfidf_dict.items(), key=lambda x: x[1], reverse=True))  
 
    tfidf_list = [news_titles_raw[i], list(tfidf_dict.keys())]
    keyword_df.loc[len(keyword_df)] = tfidf_list


print(keyword_df)